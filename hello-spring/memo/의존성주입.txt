<스프링 빈을 등록하는 2가지 방법>
1. 컴포넌트 스캔과 자동 의존관계 설정
 컨트롤로 @Controller, 서비스 @Service, 레포지토리 @Reposotory 를 해주면 스프링 빈으로 자동 등록된다. 
이유는 @Component 애노테이션이 있으면 스프링 빈으로 자동 등록되는데 @Controller, @Service, @Repository
모두 @Component를 가지고 있기 때문에 컴포넌트 스캔 원리에 의해서 빈으로 등록된다.

2. 자바 코드로 직접 스프링 빈 등록하기
직접 스플이 빈을 등록하기 위한 Config클래스를 생성한다.
@Configuration 어노테이션을 붙여주고 스프링 빈으로 등록할 서비스, 레포지토리를 생성하고 @Bean 어노테이션을 붙여준다.
의존관계에 있는 서비스 <-> 레포지토리의 경우 매개변수로 넣어준다.

- 예시 
	@Configuration
	public class SpringConpig {

	    @Bean
	    public MemberService memberService() {
	        return new MemberService(memberRepository());
	    }

	    @Bean
	    public MemberRepository memberRepository () {
 	       return new MemoryMemberRepository();
 	   }

	}

** DI에는 3가지 방법이 있다.
1. 필드 주입
2. setter 주입 - setter 메소드가 외부로 노출되기 때문에 요즘은 잘 사용하지 않는다.
3. 생성자 주입(권장)

** 실무에서는 주로 컴포넌트 스캔 방식을 사용. 정형화 되어있지 않는 경우나 상황에 따라 구현 클래스를 변경해야 하는 경우에
자바코드로 스프링 빈을 등록한다.

- 상황에 따라 구현 클래스를 변경해야 하는 경우 구현 클래스 이름만 바꿔주면 되기 때문에 직접 자바코드로 등록하는게 유리하다.

** 컴포넌트 스캔범위
해당 Application이 있는 패키지의 하위에 있는 모든 걸 찾아서 스프링 빈으로 등록한다.
패키지와 같은 선상이거나 다른 패키지는 스캔범위에 해당하지 않는다. (설정을 통해서 변경은 가능하나 기본적인 범위는 아니다)

** 싱글톤
스프링은 스플이 컨테이너에 스프링 빈을 등록할 때, 기본으로 싱금톤으로 등록한다. (유일하게 하나만 등록해서 공유한다)
따라서 같은 스프링 빈이면 모두 같은 인스턴스다. (설정을 통해서 변경은 가능하나 기본적으로 싱글톤을 사용한다)



<의존성 주입>
@Autowired를 사용하면 객체 생성 시점에 스프링 컨테이너에서 해당 스프링 빈을 찾아서 주입한다. 
(생성자가 1개만 있으면 @Autowired는 생략할 수 있다)

@Autowired를 통한 DI는 Controller, Service등과 같이 스프링이 관리하는 객체에서만 동작한다. 스프링 빈으로 등록하지 않고
내가 직접 생성한 객체에서는 동작하지 않는다.





